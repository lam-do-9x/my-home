datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native"]
  previewFeatures = ["referentialIntegrity"]
}

model Dictionary {
  id            Int                  @id @default(autoincrement())
  word          String               @unique
  ipa           String?
  pronunciation String?
  content       String?              @db.Text
  contentAt     DateTime?
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt
  sentences     DictionarySentence[]
  topics        DictionaryTopic[]
}

model Improvisation {
  id        Int      @id @default(autoincrement())
  content   String   @db.Text
  display   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Select {
  id                         Int                          @id @default(autoincrement())
  value                      String                       @unique
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
  fashionClothesSelect       FashionClothesSelect[]
  fashionTypesSelect         FashionTypesSelect[]
  bodyLanguageEmotionsSelect BodyLanguageEmotionsSelect[]
  bodyLanguageTypesSelect    BodyLanguageTypesSelect[]
  receiptIngredientsSelect   ReceiptIngredientsSelect[]
  receiptSessionsSelect      ReceiptSessionsSelect[]
  receiptMethodsSelect       ReceiptMethodsSelect[]
}

model Fashion {
  id        Int                    @id @default(autoincrement())
  image     String
  createdAt DateTime               @default(now())
  updatedAt DateTime               @updatedAt
  clothes   FashionClothesSelect[]
  types     FashionTypesSelect[]
}

model FashionClothesSelect {
  fashion    Fashion  @relation(fields: [fashionId], references: [id])
  fashionId  Int
  select     Select   @relation(fields: [selectId], references: [id])
  selectId   Int
  assignedAt DateTime @default(now())

  @@id([fashionId, selectId])
}

model FashionTypesSelect {
  fashion    Fashion  @relation(fields: [fashionId], references: [id])
  fashionId  Int
  select     Select   @relation(fields: [selectId], references: [id])
  selectId   Int
  assignedAt DateTime @default(now())

  @@id([fashionId, selectId])
}

model BodyLanguage {
  id               Int                          @id @default(autoincrement())
  media            String
  createdAt        DateTime                     @default(now())
  updatedAt        DateTime                     @updatedAt
  BodyLanguageExam BodyLanguageExam[]
  emotions         BodyLanguageEmotionsSelect[]
  types            BodyLanguageTypesSelect[]
}

model BodyLanguageExam {
  id           Int          @id @default(autoincrement())
  question     Int
  answer       String
  examDate     DateTime
  correct      Boolean      @default(false)
  bodyLanguage BodyLanguage @relation(fields: [question], references: [id])
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model BodyLanguageEmotionsSelect {
  bodyLanguage   BodyLanguage @relation(fields: [bodyLanguageId], references: [id])
  bodyLanguageId Int
  select         Select       @relation(fields: [selectId], references: [id])
  selectId       Int
  assignedAt     DateTime     @default(now())

  @@id([bodyLanguageId, selectId])
}

model BodyLanguageTypesSelect {
  bodyLanguage   BodyLanguage @relation(fields: [bodyLanguageId], references: [id])
  bodyLanguageId Int
  select         Select       @relation(fields: [selectId], references: [id])
  selectId       Int
  assignedAt     DateTime     @default(now())

  @@id([bodyLanguageId, selectId])
}

model Receipt {
  id          Int                        @id @default(autoincrement())
  name        String
  reference   String?
  cover       String?
  note        String?                    @db.Text
  createdAt   DateTime                   @default(now())
  updatedAt   DateTime                   @updatedAt
  ingredients ReceiptIngredientsSelect[]
  sessions    ReceiptSessionsSelect[]
  methods     ReceiptMethodsSelect[]
}

model ReceiptIngredientsSelect {
  receipt    Receipt  @relation(fields: [receiptId], references: [id])
  receiptId  Int
  select     Select   @relation(fields: [selectId], references: [id])
  selectId   Int
  assignedAt DateTime @default(now())

  @@id([receiptId, selectId])
}

model ReceiptSessionsSelect {
  receipt    Receipt  @relation(fields: [receiptId], references: [id])
  receiptId  Int
  select     Select   @relation(fields: [selectId], references: [id])
  selectId   Int
  assignedAt DateTime @default(now())

  @@id([receiptId, selectId])
}

model ReceiptMethodsSelect {
  receipt    Receipt  @relation(fields: [receiptId], references: [id])
  receiptId  Int
  select     Select   @relation(fields: [selectId], references: [id])
  selectId   Int
  assignedAt DateTime @default(now())

  @@id([receiptId, selectId])
}

model Topic {
  id           Int               @id @default(autoincrement())
  name         String            @unique
  content      String?           @db.Text
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  sentences    TopicSentence[]
  dictionaries DictionaryTopic[]
}

model Sentence {
  id                 Int                  @id @default(autoincrement())
  title              String               @unique
  content            String?              @db.Text
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  topicSentence      TopicSentence[]
  dictionarySentence DictionarySentence[]
}

model TopicSentence {
  topic      Topic    @relation(fields: [topicId], references: [id])
  topicId    Int
  sentence   Sentence @relation(fields: [sentenceId], references: [id])
  sentenceId Int
  assignedAt DateTime @default(now())

  @@id([topicId, sentenceId])
}

model DictionarySentence {
  dictionary   Dictionary @relation(fields: [dictionaryId], references: [id])
  dictionaryId Int
  sentence     Sentence   @relation(fields: [sentenceId], references: [id])
  sentenceId   Int
  assignedAt   DateTime   @default(now())

  @@id([dictionaryId, sentenceId])
}

model DictionaryTopic {
  dictionary   Dictionary @relation(fields: [dictionaryId], references: [id])
  dictionaryId Int
  topic        Topic      @relation(fields: [topicId], references: [id])
  topicId      Int
  assignedAt   DateTime   @default(now())

  @@id([dictionaryId, topicId])
}
