datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native"]
  previewFeatures = ["referentialIntegrity"]
}

model Dictionary {
  id            Int       @id @default(autoincrement())
  word          String    @unique
  ipa           String?
  pronunciation String?
  content       String?
  createdAt     DateTime? @default(now())
  updatedAt     DateTime? @updatedAt
  contentAt     DateTime?
}

model Improvisation {
  id        Int      @id @default(autoincrement())
  content   String   @unique
  display   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Fashion {
  id        Int                      @id @default(autoincrement())
  image     String
  createdAt DateTime                 @default(now())
  updatedAt DateTime                 @updatedAt
  clothes   FashionClothesSelected[]
  types     FashionTypesSelected[]
}

model Selected {
  id                           Int                            @id @default(autoincrement())
  value                        String?                        @unique
  label                        String?                        @unique
  createdAt                    DateTime                       @default(now())
  updatedAt                    DateTime                       @updatedAt
  fashionClothesSelected       FashionClothesSelected[]
  fashionTypesSelected         FashionTypesSelected[]
  bodyLanguageEmotionsSelected BodyLanguageEmotionsSelected[]
  bodyLanguageTypesSelected    BodyLanguageTypesSelected[]
  receiptIngredientsSelected   ReceiptIngredientsSelected[]
  receiptSessionsSelected      ReceiptSessionsSelected[]
  receiptMethodsSelected       ReceiptMethodsSelected[]
}

model FashionClothesSelected {
  fashion    Fashion  @relation(fields: [fashionId], references: [id])
  fashionId  Int
  selected   Selected @relation(fields: [selectedId], references: [id])
  selectedId Int
  assignedAt DateTime @default(now())

  @@id([fashionId, selectedId])
}

model FashionTypesSelected {
  fashion    Fashion  @relation(fields: [fashionId], references: [id])
  fashionId  Int
  selected   Selected @relation(fields: [selectedId], references: [id])
  selectedId Int
  assignedAt DateTime @default(now())

  @@id([fashionId, selectedId])
}

model BodyLanguage {
  id               Int                            @id @default(autoincrement())
  media            String
  createdAt        DateTime                       @default(now())
  updatedAt        DateTime                       @updatedAt
  emotions         BodyLanguageEmotionsSelected[]
  types            BodyLanguageTypesSelected[]
  BodyLanguageExam BodyLanguageExam[]
}

model BodyLanguageEmotionsSelected {
  bodyLanguage   BodyLanguage @relation(fields: [bodyLanguageId], references: [id])
  bodyLanguageId Int
  selected       Selected     @relation(fields: [selectedId], references: [id])
  selectedId     Int
  assignedAt     DateTime     @default(now())

  @@id([bodyLanguageId, selectedId])
}

model BodyLanguageTypesSelected {
  bodyLanguage   BodyLanguage @relation(fields: [bodyLanguageId], references: [id])
  bodyLanguageId Int
  selected       Selected     @relation(fields: [selectedId], references: [id])
  selectedId     Int
  assignedAt     DateTime     @default(now())

  @@id([bodyLanguageId, selectedId])
}

model BodyLanguageExam {
  id           Int          @id @default(autoincrement())
  bodyLanguage BodyLanguage @relation(fields: [question], references: [id])
  question     Int
  answer       String
  examDate     DateTime
  correct      Boolean      @default(false)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Receipt {
  id          Int                          @id @default(autoincrement())
  name        String
  reference   String?
  cover       String?
  note        String?
  ingredients ReceiptIngredientsSelected[]
  sessions    ReceiptSessionsSelected[]
  methods     ReceiptMethodsSelected[]
  createdAt   DateTime                     @default(now())
  updatedAt   DateTime                     @updatedAt
}

model ReceiptIngredientsSelected {
  receipt    Receipt  @relation(fields: [receiptId], references: [id])
  receiptId  Int
  selected   Selected @relation(fields: [selectedId], references: [id])
  selectedId Int
  assignedAt DateTime @default(now())

  @@id([receiptId, selectedId])
}

model ReceiptSessionsSelected {
  receipt    Receipt  @relation(fields: [receiptId], references: [id])
  receiptId  Int
  selected   Selected @relation(fields: [selectedId], references: [id])
  selectedId Int
  assignedAt DateTime @default(now())

  @@id([receiptId, selectedId])
}

model ReceiptMethodsSelected {
  receipt    Receipt  @relation(fields: [receiptId], references: [id])
  receiptId  Int
  selected   Selected @relation(fields: [selectedId], references: [id])
  selectedId Int
  assignedAt DateTime @default(now())

  @@id([receiptId, selectedId])
}
